var Path=require("./Path.js");var ilib=require("./ilib.js");var Loader=function(){this.protocol="file://";this.includePath=[]};Loader.prototype=new ilib.Loader();Loader.prototype.parent=ilib.Loader;Loader.prototype.constructor=Loader;Loader.prototype._loadFile=function(pathname,sync,cb){};Loader.prototype._exists=function(dir,file){var fullpath=Path.normalize(Path.join(dir,file));if(this.protocol!=="http://"){var text=this._loadFile(fullpath,true);if(text){this.includePath.push(dir)}}else{this.includePath.push(dir);this._loadFile(fullpath,false,ilib.bind(this,function(text){if(!text){this.includePath=this.includePath.slice(-1)}}))}};Loader.prototype._loadFileAlongIncludePath=function(includePath,pathname){for(var i=0;i<includePath.length;i++){var manifest=this.manifest[includePath[i]];if(!manifest||Loader.indexOf(manifest,pathname)>-1){var filepath=Path.join(includePath[i],pathname);var text=this._loadFile(filepath,true);if(text){return text}}}return undefined};Loader.prototype.loadFiles=function(paths,sync,params,callback){var includePath=params&&params.base?[params.base].concat(this.includePath):this.includePath;if(!paths){return}if(params&&params.returnOne){var pathname;var tmp=[];while((pathname=paths.pop())!==undefined){tmp.push(pathname)}paths=tmp}if(sync){var ret=[];this._loadManifests(true);for(var i=0;i<paths.length;i++){var text=this._loadFileAlongIncludePath(includePath,Path.normalize(paths[i]));ret.push(text?JSON.parse(text):undefined);if(params&&params.returnOne&&text){break;}}if(typeof callback==="function"){callback(ret)}return ret}this._loadManifests(false,ilib.bind(this,function(){this.results=[];this._loadFilesAsync(includePath,paths,callback)}))};Loader.prototype._loadFilesAsyncAlongIncludePath=function(includes,filename,cb){var text=undefined;if(includes.length>0){var root=includes[0];includes=includes.slice(1);var manifest=this.manifest[root];if(!manifest||Loader.indexOf(manifest,filename)>-1){var filepath=Path.join(root,filename);this._loadFile(filepath,false,ilib.bind(this,function(t){if(t){cb(t)}else{this._loadFilesAsyncAlongIncludePath(includes,filename,cb)}}))}else{this._loadFilesAsyncAlongIncludePath(includes,filename,cb)}}else{cb()}};Loader.prototype._loadFilesAsync=function(includePath,paths,callback){if(paths.length>0){var filename=paths[0];paths=paths.slice(1);this._loadFilesAsyncAlongIncludePath(includePath,filename,ilib.bind(this,function(json){this.results.push(json?JSON.parse(json):undefined);this._loadFilesAsync(includePath,paths,callback)}))}else{if(typeof callback==="function"){callback(this.results)}}};Loader.prototype._loadManifestFile=function(i,sync,cb){if(i<this.includePath.length){var filepath=Path.join(this.includePath[i],"ilibmanifest.json");var text=this._loadFile(filepath,sync,ilib.bind(this,function(text){if(text){this.manifest[this.includePath[i]]=JSON.parse(text).files}this._loadManifestFile(i+1,sync,cb)}))}else{if(typeof cb==="function"){cb()}}};Loader.prototype._loadManifests=function(sync,cb){if(!this.manifest){this.manifest={};if(typeof sync!=="boolean"){sync=true}this._loadManifestFile(0,sync,cb)}else{if(typeof cb==="function"){cb()}}};Loader.prototype.listAvailableFiles=function(sync,cb){this._loadManifests(sync,ilib.bind(this,function(){if(typeof cb==="function"){cb(this.manifest)}}));return this.manifest};Loader.indexOf=function(array,obj){if(!array||!obj){return-1}if(typeof array.indexOf==="function"){return array.indexOf(obj)}else{for(var i=0;i<array.length;i++){if(array[i]===obj){return i}}return-1}};Loader.prototype.checkAvailability=function(file){for(var dir in this.manifest){if(Loader.indexOf(this.manifest[dir],file)!==-1){return true}}return false};Loader.prototype.isAvailable=function(file,sync,cb){if(typeof sync!=="boolean"){sync=true}if(sync){this._loadManifests(sync);return this.checkAvailability(file)}this._loadManifests(false,ilib.bind(this,function(){if(typeof cb==="function"){cb(this.checkAvailability(file))}}))};module.exports=Loader;