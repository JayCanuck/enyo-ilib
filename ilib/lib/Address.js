var ilib=require("./ilib.js");var Utils=require("./Utils.js");var JSUtils=require("./JSUtils.js");var Locale=require("./Locale.js");var CType=require("./CType.js");var isIdeo=require("./isIdeo.js");var isAscii=require("./isAscii.js");var isDigit=require("./isDigit.js");var IString=require("./IString.js");var Address=function(freeformAddress,options){var address;if(!freeformAddress){return undefined}this.sync=true;this.loadParams={};if(options){if(options.locale){this.locale=typeof options.locale==="string"?new Locale(options.locale):options.locale}if(typeof options.sync!=="undefined"){this.sync=options.sync==true}if(options.loadParams){this.loadParams=options.loadParams}}this.locale=this.locale||new Locale();if(typeof freeformAddress==="object"){this.streetAddress=freeformAddress.streetAddress;this.locality=freeformAddress.locality;this.region=freeformAddress.region;this.postalCode=freeformAddress.postalCode;this.postOffice=freeformAddress.postOffice;this.country=freeformAddress.country;if(freeformAddress.countryCode){this.countryCode=freeformAddress.countryCode}if(freeformAddress.format){this.format=freeformAddress.format}return this}address=freeformAddress.replace(/[ \t\r]+/g," ").trim();address=address.replace(/[\s\n]+$/,"");address=address.replace(/^[\s\n]+/,"");this.lines=address.split(/[,ï¼Œ\n]/g);this.removeEmptyLines(this.lines);isAscii._init(this.sync,this.loadParams,ilib.bind(this,function(){isIdeo._init(this.sync,this.loadParams,ilib.bind(this,function(){isDigit._init(this.sync,this.loadParams,ilib.bind(this,function(){if(typeof ilib.data.nativecountries==="undefined"){Utils.loadData({object:Address,name:"nativecountries.json",locale:"-",nonlocale:true,sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function(nativecountries){ilib.data.nativecountries=nativecountries;this._loadCountries(options&&options.onLoad)})})}else{this._loadCountries(options&&options.onLoad)}}))}))}))};Address.prototype={_loadCountries:function(onLoad){if(typeof ilib.data.countries==="undefined"){Utils.loadData({object:Address,name:"countries.json",locale:"-",nonlocale:true,sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function(countries){ilib.data.countries=countries;this._loadCtrynames(onLoad)})})}else{this._loadCtrynames(onLoad)}},_loadCtrynames:function(onLoad){Utils.loadData({name:"ctrynames.json",object:Address,locale:this.locale,sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function(ctrynames){this._determineDest(ctrynames,onLoad)})})},_findDest:function(ctrynames){var match;for(var countryName in ctrynames){if(countryName&&countryName!=="generated"){if(!match||match.text.length<countryName.length){var temp=this._findCountry(countryName);if(temp){match=temp;this.country=match.text;this.countryCode=ctrynames[countryName]}}}}return match},_determineDest:function(localizedCountries,callback){var match;var tables=[];if(localizedCountries){tables.push(localizedCountries)}tables.push(ilib.data.nativecountries);tables.push(ilib.data.countries);for(var i=0;i<tables.length;i++){match=this._findDest(tables[i]);if(match){this.lines[match.line]=this.lines[match.line].substring(0,match.start)+this.lines[match.line].substring(match.start+match.text.length);this._init(callback);return}}this.country=undefined;this.countryCode=this.locale.getRegion();this._init(callback)},_init:function(callback){Utils.loadData({object:Address,locale:new Locale(this.countryCode),name:"address.json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function(info){if(!info||JSUtils.isEmpty(info)){Utils.loadData({object:Address,locale:new Locale("XX"),name:"address.json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function(info){this.info=info;this._parseAddress();if(typeof callback==="function"){callback(this)}})})}else{this.info=info;this._parseAddress();if(typeof callback==="function"){callback(this)}}})})},_parseAddress:function(){var i,asianChars=0,latinChars=0,startAt,infoFields,field,pattern,matchFunction,match,fieldNumber;if(this.info&&this.info.multiformat){for(var j=0;j<this.lines.length;j++){var line=new IString(this.lines[j]);var it=line.charIterator();while(it.hasNext()){var c=it.next();if(isIdeo(c)||CType.withinRange(c,"Hangul")){asianChars++}else if(isAscii(c)&&!isDigit(c)){latinChars++}}}this.format=asianChars>=latinChars?"asian":"latin";startAt=this.info.startAt[this.format];infoFields=this.info.fields[this.format]}else{startAt=this.info&&this.info.startAt||"end";infoFields=this.info.fields}this.compare=startAt==="end"?this.endsWith:this.startsWith;for(i=0;i<infoFields.length&&this.lines.length>0;i++){field=infoFields[i];this.removeEmptyLines(this.lines);if(field.pattern){if(typeof field.pattern==="string"){pattern=new RegExp(field.pattern,"img");matchFunction=this.matchRegExp}else{pattern=field.pattern;matchFunction=this.matchPattern}switch(field.line){case"startAtFirst":for(fieldNumber=0;fieldNumber<this.lines.length;fieldNumber++){match=matchFunction(this,this.lines[fieldNumber],pattern,field.matchGroup,startAt);if(match){break;}}break;case"startAtLast":for(fieldNumber=this.lines.length-1;fieldNumber>=0;fieldNumber--){match=matchFunction(this,this.lines[fieldNumber],pattern,field.matchGroup,startAt);if(match){break;}}break;case"first":fieldNumber=0;match=matchFunction(this,this.lines[fieldNumber],pattern,field.matchGroup,startAt);break;case"last":default:fieldNumber=this.lines.length-1;match=matchFunction(this,this.lines[fieldNumber],pattern,field.matchGroup,startAt);break}if(match){this.lines[fieldNumber]=match.line;this[field.name]=match.match}}else{this[field.name]=this.lines.splice(fieldNumber,1)[0].trim()}}this.removeEmptyLines(this.lines);if(this.lines.length>0){var joinString=this.info.joinString&&this.info.joinString[this.format]||(this.format&&this.format==="asian"?"":", ");this.streetAddress=this.lines.join(joinString).trim()}this.lines=undefined},_findCountry:function(name){var start=-1,match,line=0;if(this.lines.length>0){start=this.startsWith(this.lines[line],name);if(start===-1){line=this.lines.length-1;start=this.endsWith(this.lines[line],name)}if(start!==-1){match={text:this.lines[line].substring(start,start+name.length),line:line,start:start}}}return match},endsWith:function(subject,query){var start=subject.length-query.length,i,pat;for(i=0;i<query.length;i++){if(subject.charAt(start+i).toLowerCase()!==query.charAt(i).toLowerCase()){return-1}}if(start>0){pat=/\s/;if(!pat.test(subject.charAt(start-1))){return-1}}return start},startsWith:function(subject,query){var i;for(i=0;i<query.length;i++){if(subject.charAt(i).toLowerCase()!==query.charAt(i).toLowerCase()){return-1}}return 0},removeEmptyLines:function(arr){var i=0;while(i<arr.length){if(arr[i]){arr[i]=arr[i].trim();if(arr[i].length===0){arr.splice(i,1)}else{i++}}else{arr.splice(i,1)}}},matchRegExp:function(address,line,expression,matchGroup,startAt){var lastMatch,match,ret={},last;match=expression.exec(line);if(startAt==="end"){while(match!==null&&match.length>0){lastMatch=match;match=expression.exec(line)}match=lastMatch}if(match&&match!==null){matchGroup=matchGroup||0;if(match[matchGroup]!==undefined){ret.match=match[matchGroup].trim();ret.match=ret.match.replace(/^\-|\-+$/,"");ret.match=ret.match.replace(/\s+$/,"");last=startAt==="end"?line.lastIndexOf(match[matchGroup]):line.indexOf(match[matchGroup]);ret.line=line.slice(0,last);if(address.format!=="asian"){ret.line+=" "}ret.line+=line.slice(last+match[matchGroup].length);ret.line=ret.line.trim();return ret}}return undefined},matchPattern:function(address,line,pattern,matchGroup){var start,j,ret={};for(j=0;j<pattern.length;j++){start=address.compare(line,pattern[j]);if(start!==-1){ret.match=line.substring(start,start+pattern[j].length);if(start!==0){ret.line=line.substring(0,start).trim()}else{ret.line=line.substring(pattern[j].length).trim()}return ret}}return undefined}};module.exports=Address;