var ilib=require("./ilib.js");var Utils=require("./Utils.js");var JSUtils=require("./JSUtils.js");var Locale=require("./Locale.js");var PhoneNumber=require("./PhoneNumber.js");var NumberingPlan=require("./NumberingPlan.js");var PhoneLocale=require("./PhoneLocale.js");var ResBundle=require("./ResBundle.js");var PhoneGeoLocator=function(options){var sync=true,loadParams={},locale=ilib.getLocale();if(options){if(options.locale){locale=options.locale}if(typeof options.sync==="boolean"){sync=options.sync}if(options.loadParams){loadParams=options.loadParams}}new PhoneLocale({locale:locale,mcc:options&&options.mcc,countryCode:options&&options.countryCode,sync:sync,loadParams:loadParams,onLoad:ilib.bind(this,function(loc){this.locale=loc;new NumberingPlan({locale:this.locale,sync:sync,loadParams:loadParams,onLoad:ilib.bind(this,function(plan){this.plan=plan;new ResBundle({locale:this.locale,name:"phoneres",sync:sync,loadParams:loadParams,onLoad:ilib.bind(this,function(rb){this.rb=rb;Utils.loadData({name:"iddarea.json",object:PhoneGeoLocator,nonlocale:true,sync:sync,loadParams:loadParams,callback:ilib.bind(this,function(data){this.regiondata=data;Utils.loadData({name:"area.json",object:PhoneGeoLocator,locale:this.locale,sync:sync,loadParams:JSUtils.merge(loadParams,{returnOne:true}),callback:ilib.bind(this,function(areadata){this.areadata=areadata;if(options&&typeof options.onLoad==="function"){options.onLoad(this)}})})})})})})})})})})};PhoneGeoLocator.prototype={_parseAreaAndSubscriber:function(number,stateTable){var ch,i,handlerMethod,newState,prefix="",consumed,lastLeaf,currentState,dot=14;if(!number||!stateTable){return undefined}currentState=stateTable;i=0;while(i<number.length){ch=PhoneNumber._getCharacterCode(number.charAt(i));if(ch>=0){newState=currentState.s&&currentState.s[ch];if(!newState&&currentState.s&&currentState.s[dot]){newState=currentState.s[dot]}if(typeof newState==="object"){if(typeof newState.l!=="undefined"){lastLeaf=newState;consumed=i}currentState=newState;i++}else{if(typeof newState==="undefined"||newState===0){newState=lastLeaf;i=consumed}if(typeof newState==="number"&&newState||typeof newState==="object"&&typeof newState.l!=="undefined"){var stateNumber=typeof newState==="number"?newState:newState.l;handlerMethod=PhoneNumber._states[stateNumber];return handlerMethod==="area"?number.substring(0,i+1):undefined}else{break;}}}else if(ch===-1){i++}else{i++}}return undefined},_matchPrefix:function(prefix,table){var i,matchedDot,matchesWithDots=[];if(table[prefix]){return table[prefix]}for(var entry in table){if(entry&&typeof entry==="string"){i=0;matchedDot=false;while(i<entry.length&&(entry.charAt(i)===prefix.charAt(i)||entry.charAt(i)===".")){if(entry.charAt(i)==="."){matchedDot=true}i++}if(i>=entry.length){if(matchedDot){matchesWithDots.push(entry)}else{return table[entry]}}}}if(matchesWithDots.length>0){matchesWithDots.sort(function(left,right){return right<left?-1:left<right?1:0});return table[matchesWithDots[0]]}return undefined},_getAreaInfo:function(number,data,locale,plan,options){var sync=true,ret={},countryCode,areaInfo,temp,areaCode,geoTable,tempNumber,prefix;if(options&&typeof options.sync==="boolean"){sync=options.sync}prefix=number.areaCode||number.serviceCode;geoTable=data;if(prefix!==undefined){if(plan.getExtendedAreaCode()){tempNumber=prefix+number.subscriberNumber;tempNumber=tempNumber.replace(/[wWpPtT\+#\*]/g,"");Utils.loadData({name:"extarea.json",object:PhoneGeoLocator,locale:locale,sync:sync,loadParams:JSUtils.merge(options&&options.loadParams||{},{returnOne:true}),callback:ilib.bind(this,function(data){this.extarea=data;Utils.loadData({name:"extstates.json",object:PhoneGeoLocator,locale:locale,sync:sync,loadParams:JSUtils.merge(options&&options.loadParams||{},{returnOne:true}),callback:ilib.bind(this,function(data){this.extstates=data;geoTable=this.extarea;if(this.extarea&&this.extstates){prefix=this._parseAreaAndSubscriber(tempNumber,this.extstates)}if(!prefix){geoTable=this.areadata;prefix=number.areaCode||number.serviceCode}if(!plan.fieldLengths||plan.getFieldLength("maxLocalLength")===undefined||!number.subscriberNumber||number.subscriberNumber.length<=plan.fieldLengths("maxLocalLength")){areaInfo=this._matchPrefix(prefix,geoTable);if(areaInfo&&areaInfo.sn&&areaInfo.ln){ret.area={sn:this.rb.getString(areaInfo.sn).toString(),ln:this.rb.getString(areaInfo.ln).toString()}}}})})})})}else if(!plan||plan.getFieldLength("maxLocalLength")===undefined||!number.subscriberNumber||number.subscriberNumber.length<=plan.getFieldLength("maxLocalLength")){if(geoTable){areaCode=prefix.replace(/[wWpPtT\+#\*]/g,"");areaInfo=this._matchPrefix(areaCode,geoTable);if(areaInfo&&areaInfo.sn&&areaInfo.ln){ret.area={sn:this.rb.getString(areaInfo.sn).toString(),ln:this.rb.getString(areaInfo.ln).toString()}}else if(number.serviceCode){ret.area={sn:this.rb.getString("Service Number").toString(),ln:this.rb.getString("Service Number").toString()}}}else{countryCode=number.locale._mapRegiontoCC(this.locale.getRegion());if(countryCode!=="0"&&this.regiondata){temp=this.regiondata[countryCode];if(temp&&temp.sn){ret.country={sn:this.rb.getString(temp.sn).toString(),ln:this.rb.getString(temp.ln).toString(),code:this.locale.getRegion()}}}}}else{countryCode=number.locale._mapRegiontoCC(this.locale.getRegion());if(countryCode!=="0"&&this.regiondata){temp=this.regiondata[countryCode];if(temp&&temp.sn){ret.country={sn:this.rb.getString(temp.sn).toString(),ln:this.rb.getString(temp.ln).toString(),code:this.locale.getRegion()}}}}}else if(number.mobilePrefix){ret.area={sn:this.rb.getString("Mobile Number").toString(),ln:this.rb.getString("Mobile Number").toString()}}else if(number.emergency){ret.area={sn:this.rb.getString("Emergency Services Number").toString(),ln:this.rb.getString("Emergency Services Number").toString()}}return ret},locate:function(number,options){var loadParams={},ret={},region,countryCode,temp,plan,areaResult,phoneLoc=this.locale,sync=true;if(number===undefined||typeof number!=="object"||!(number instanceof PhoneNumber)){return ret}if(options){if(typeof options.sync!=="undefined"){sync=options.sync==true}if(options.loadParams){loadParams=options.loadParams}}region=this.locale.getRegion();if(number.countryCode!==undefined&&this.regiondata){countryCode=number.countryCode.replace(/[wWpPtT\+#\*]/g,"");temp=this.regiondata[countryCode];phoneLoc=number.destinationLocale;plan=number.destinationPlan;ret.country={sn:this.rb.getString(temp.sn).toString(),ln:this.rb.getString(temp.ln).toString(),code:phoneLoc.getRegion()}}if(!plan){plan=this.plan}Utils.loadData({name:"area.json",object:PhoneGeoLocator,locale:phoneLoc,sync:sync,loadParams:JSUtils.merge(loadParams,{returnOne:true}),callback:ilib.bind(this,function(areadata){if(areadata){this.areadata=areadata}areaResult=this._getAreaInfo(number,this.areadata,phoneLoc,plan,options);ret=JSUtils.merge(ret,areaResult);if(ret.country===undefined){countryCode=number.locale._mapRegiontoCC(region);if(countryCode!=="0"&&this.regiondata){temp=this.regiondata[countryCode];if(temp&&temp.sn){ret.country={sn:this.rb.getString(temp.sn).toString(),ln:this.rb.getString(temp.ln).toString(),code:this.locale.getRegion()}}}}})});return ret},country:function(number){var countryCode,region,phoneLoc;if(!number||!(number instanceof PhoneNumber)){return""}phoneLoc=number.locale;region=number.countryCode&&phoneLoc._mapCCtoRegion(number.countryCode)||number.locale&&number.locale.region||phoneLoc.locale.getRegion()||this.locale.getRegion();countryCode=number.countryCode||phoneLoc._mapRegiontoCC(region);if(number.areaCode){region=phoneLoc._mapAreatoRegion(countryCode,number.areaCode)}else if(countryCode==="33"&&number.serviceCode){region=phoneLoc._mapAreatoRegion(countryCode,number.serviceCode)}return region}};module.exports=PhoneGeoLocator;