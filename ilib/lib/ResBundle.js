var ilib=require("./ilib.js");var Utils=require("./Utils.js");var JSUtils=require("./JSUtils.js");var Locale=require("./Locale.js");var LocaleInfo=require("./LocaleInfo.js");var IString=require("./IString.js");var ResBundle=function(options){var lookupLocale,spec;this.locale=new Locale();this.baseName="strings";this.type="text";this.loadParams={};this.missing="source";this.sync=true;if(options){if(options.locale){this.locale=typeof options.locale==="string"?new Locale(options.locale):options.locale}if(options.name){this.baseName=options.name}if(options.type){this.type=options.type}this.lengthen=options.lengthen||false;if(typeof options.sync!=="undefined"){this.sync=options.sync==true}if(typeof options.loadParams!=="undefined"){this.loadParams=options.loadParams}if(typeof options.missing!=="undefined"){if(options.missing==="pseudo"||options.missing==="empty"){this.missing=options.missing}}}else{options={}}this.map={};if(!ResBundle[this.baseName]){ResBundle[this.baseName]={}}lookupLocale=this.locale.isPseudo()?new Locale("en-US"):this.locale;Utils.loadData({object:ResBundle[this.baseName],locale:lookupLocale,name:this.baseName+".json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function(map){if(!map){map=ilib.data[this.baseName]||{};spec=lookupLocale.getSpec().replace(/-/g,"_");ResBundle[this.baseName].cache[spec]=map}this.map=map;if(this.locale.isPseudo()){if(!ResBundle.pseudomap){ResBundle.pseudomap={}}this._loadPseudo(this.locale,options.onLoad)}else if(this.missing==="pseudo"){if(!ResBundle.pseudomap){ResBundle.pseudomap={}}new LocaleInfo(this.locale,{sync:this.sync,loadParams:this.loadParams,onLoad:ilib.bind(this,function(li){var pseudoLocale=new Locale("zxx","XX",undefined,li.getDefaultScript());this._loadPseudo(pseudoLocale,options.onLoad)})})}else{if(typeof options.onLoad==="function"){options.onLoad(this)}}})})};ResBundle.defaultPseudo=ilib.data.pseudomap||{a:"à",e:"ë",i:"í",o:"õ",u:"ü",y:"ÿ",A:"Ã",E:"Ë",I:"Ï",O:"Ø",U:"Ú",Y:"Ŷ"};ResBundle.prototype={_loadPseudo:function(pseudoLocale,onLoad){Utils.loadData({object:ResBundle.pseudomap,locale:pseudoLocale,name:"pseudomap.json",sync:this.sync,loadParams:this.loadParams,callback:ilib.bind(this,function(map){if(!map||JSUtils.isEmpty(map)){map=ResBundle.defaultPseudo;var spec=pseudoLocale.getSpec().replace(/-/g,"_");ResBundle.pseudomap.cache[spec]=map}this.pseudomap=map;if(typeof onLoad==="function"){onLoad(this)}})})},getLocale:function(){return this.locale},getName:function(){return this.baseName},getType:function(){return this.type},pseudo:function(str){if(!str){return undefined}var ret="",i;for(i=0;i<str.length;i++){if(this.type!=="raw"){if(this.type==="html"||this.type==="xml"){if(str.charAt(i)==="<"){ret+=str.charAt(i++);while(i<str.length&&str.charAt(i)!==">"){ret+=str.charAt(i++)}if(i<str.length){ret+=str.charAt(i++)}}else if(str.charAt(i)==="&"){ret+=str.charAt(i++);while(i<str.length&&str.charAt(i)!==";"&&str.charAt(i)!==" "){ret+=str.charAt(i++)}if(i<str.length){ret+=str.charAt(i++)}}}if(i<str.length){if(str.charAt(i)==="{"){ret+=str.charAt(i++);while(i<str.length&&str.charAt(i)!=="}"){ret+=str.charAt(i++)}if(i<str.length){ret+=str.charAt(i)}}else{ret+=this.pseudomap[str.charAt(i)]||str.charAt(i)}}}else{ret+=this.pseudomap[str.charAt(i)]||str.charAt(i)}}if(this.lengthen){var add;if(ret.length<=20){add=Math.round(ret.length/2)}else if(ret.length>20&&ret.length<=40){add=Math.round(ret.length/3)}else{add=Math.round(ret.length/5)}for(i=add-1;i>=0;i--){ret+=i%10}}if(this.locale.getScript()==="Hans"||this.locale.getScript()==="Hant"||this.locale.getScript()==="Hani"||this.locale.getScript()==="Hrkt"||this.locale.getScript()==="Jpan"||this.locale.getScript()==="Hira"||this.locale.getScript()==="Kana"){ret=ret.replace(/ /g,"")}return ret},escapeXml:function(str){str=str.replace(/&/g,"&amp;");str=str.replace(/</g,"&lt;");str=str.replace(/>/g,"&gt;");return str},unescapeXml:function(str){str=str.replace(/&amp;/g,"&");str=str.replace(/&lt;/g,"<");str=str.replace(/&gt;/g,">");return str},makeKey:function(source){var key=source.replace(/\s+/gm," ");return this.type==="xml"||this.type==="html"?this.unescapeXml(key):key},getString:function(source,key,escapeMode){if(!source&&!key)return new IString("");var trans;if(this.locale.isPseudo()){var str=source?source:this.map[key];trans=this.pseudo(str||key)}else{var keyName=key||this.makeKey(source);if(typeof this.map[keyName]!=="undefined"){trans=this.map[keyName]}else if(this.missing==="pseudo"){trans=this.pseudo(source||key)}else if(this.missing==="empty"){trans=""}else{trans=source}}if(escapeMode&&escapeMode!=="none"){if(escapeMode=="default"){escapeMode=this.type}if(escapeMode==="xml"||escapeMode==="html"){trans=this.escapeXml(trans)}else if(escapeMode=="js"||escapeMode==="attribute"){trans=trans.replace(/'/g,"\\'").replace(/"/g,'\\"')}}if(trans===undefined){return undefined}else{var ret=new IString(trans);ret.setLocale(this.locale.getSpec(),true,this.loadParams);return ret}},getStringJS:function(source,key,escapeMode){return this.getString(source,key,escapeMode).toString()},containsKey:function(source,key){if(typeof source==="undefined"&&typeof key==="undefined"){return false}var keyName=key||this.makeKey(source);return typeof this.map[keyName]!=="undefined"},getResObj:function(){return this.map}};module.exports=ResBundle;