var ilib=require("./ilib.js");var MathUtils=require("./MathUtils.js");var Utils=require("./Utils.js");var Locale=require("./Locale.js");var LocaleInfo=require("./LocaleInfo.js");var INumber=require("./INumber.js");var isPunct=require("./isPunct.js");var isDigit=require("./isDigit.js");var NormString=require("./NormString.js");var CodePointSource=require("./CodePointSource.js");var ElementIterator=require("./ElementIterator.js");var GlyphString=require("./GlyphString.js");var Collator=function(options){var sync=true,loadParams=undefined,useNative=true;this.locale=new Locale(ilib.getLocale());this.caseFirst="upper";this.sensitivity="variant";this.level=4;this.usage="sort";this.reverse=false;this.numeric=false;this.style="default";this.ignorePunctuation=false;if(options){if(options.locale){this.locale=typeof options.locale==="string"?new Locale(options.locale):options.locale}if(options.sensitivity){switch(options.sensitivity){case"primary":case"base":this.sensitivity="base";this.level=1;break;case"secondary":case"accent":this.sensitivity="accent";this.level=2;break;case"tertiary":case"case":this.sensitivity="case";this.level=3;break;case"quaternary":case"variant":this.sensitivity="variant";this.level=4;break}}if(typeof options.upperFirst!=="undefined"){this.caseFirst=options.upperFirst?"upper":"lower"}if(typeof options.ignorePunctuation!=="undefined"){this.ignorePunctuation=options.ignorePunctuation}if(typeof options.sync!=="undefined"){sync=options.sync==true}loadParams=options.loadParams;if(typeof options.useNative!=="undefined"){useNative=options.useNative}if(options.usage==="sort"||options.usage==="search"){this.usage=options.usage}if(typeof options.reverse==="boolean"){this.reverse=options.reverse}if(typeof options.numeric==="boolean"){this.numeric=options.numeric}if(typeof options.style==="string"){this.style=options.style}}if(this.usage==="sort"){this.level=4}if(useNative&&typeof Intl!=="undefined"&&Intl){this.collator=new Intl.Collator(this.locale.getSpec(),this);if(options&&typeof options.onLoad==="function"){options.onLoad(this)}}else{if(!Collator.cache){Collator.cache={}}Utils.loadData({object:Collator,locale:this.locale,name:"collation.json",sync:sync,loadParams:loadParams,callback:ilib.bind(this,function(collation){if(!collation){collation=ilib.data.collation;var spec=this.locale.getSpec().replace(/-/g,"_");Collator.cache[spec]=collation}this._init(collation);new LocaleInfo(this.locale,{sync:sync,loadParams:loadParams,onLoad:ilib.bind(this,function(li){this.li=li;if(this.ignorePunctuation){isPunct._init(sync,loadParams,ilib.bind(this,function(){if(options&&typeof options.onLoad==="function"){options.onLoad(this)}}))}else{if(options&&typeof options.onLoad==="function"){options.onLoad(this)}}})})})})}};Collator.prototype={_pack:function(arr,offset){var value=0;if(arr){if(typeof arr==="number"){arr=[arr]}for(var i=0;i<this.level;i++){var thisLevel=typeof arr[i]!=="undefined"?arr[i]:0;if(i===0){thisLevel+=offset}if(i>0){value<<=this.collation.bits[i]}if(i===2&&this.caseFirst==="lower"){value=value|1-thisLevel}else{value=value|thisLevel}}}return value},_packRule:function(rule,offset){if(ilib.isArray(rule[0])){var ret=[];for(var i=0;i<rule.length;i++){ret.push(this._pack(rule[i],offset))}return ret}else{return[this._pack(rule,offset)]}},_addChars:function(str,offset){var gs=new GlyphString(str);var it=gs.charIterator();var c;while(it.hasNext()){c=it.next();if(c==="'"){c="";var x="";while(it.hasNext()&&x!=="'"){c+=x;x=it.next()}}this.lastMap++;this.map[c]=this._packRule([this.lastMap],offset)}},_addRules:function(rules,start){var p;for(var r in rules.map){if(r){this.map[r]=this._packRule(rules.map[r],start);p=typeof rules.map[r][0]==="number"?rules.map[r][0]:rules.map[r][0][0];this.lastMap=Math.max(p+start,this.lastMap)}}if(typeof rules.ranges!=="undefined"){for(var i=0;i<rules.ranges.length;i++){var range=rules.ranges[i];this.lastMap=range.start;if(typeof range.chars==="string"){this._addChars(range.chars,start)}else{for(var k=0;k<range.chars.length;k++){this._addChars(range.chars[k],start)}}}}},_init:function(rules){var rule=this.style;while(typeof rule==="string"){rule=rules[rule]}if(!rule){rule="default";while(typeof rule==="string"){rule=rules[rule]}}if(!rule){this.map={};return}this.collation=rule;this.map={};this.lastMap=-1;this.keysize=this.collation.keysize[this.level-1];if(typeof this.collation.inherit!=="undefined"){for(var i=0;i<this.collation.inherit.length;i++){var col=this.collation.inherit[i];rule=typeof col==="object"?col.name:col;if(rules[rule]){this._addRules(rules[rule],col.start||this.lastMap+1)}}}this._addRules(this.collation,this.lastMap+1)},_basicCompare:function(left,right){var l=left instanceof NormString?left:new NormString(left),r=right instanceof NormString?right:new NormString(right),lchar,rchar,lelements,relements;if(this.numeric){var lvalue=new INumber(left,{locale:this.locale});var rvalue=new INumber(right,{locale:this.locale});if(!isNaN(lvalue.valueOf())&&!isNaN(rvalue.valueOf())){var diff=lvalue.valueOf()-rvalue.valueOf();if(diff){return diff}else{l=new NormString(left.substring(lvalue.parsed.length));r=new NormString(right.substring(rvalue.parsed.length))}}}lelements=new ElementIterator(new CodePointSource(l,this.ignorePunctuation),this.map,this.keysize);relements=new ElementIterator(new CodePointSource(r,this.ignorePunctuation),this.map,this.keysize);while(lelements.hasNext()&&relements.hasNext()){var diff=lelements.next()-relements.next();if(diff){return diff}}if(!lelements.hasNext()&&!relements.hasNext()){return 0}else if(lelements.hasNext()){return 1}else{return-1}},compare:function(left,right){if(this.collator){return this.collator.compare(left,right)}var ret=this._basicCompare(left,right);return this.reverse?-ret:ret},getComparator:function(){if(this.collator){return this.collator.compare}return ilib.bind(this,this.compare)},sortKey:function(str){var ret="";if(!str){return""}if(this.collator){return str}function pad(str,limit){return"0000000000000000".substring(0,limit-str.length)+str}if(this.numeric){var v=new INumber(str,{locale:this.locale});var s=isNaN(v.valueOf())?"":v.valueOf().toString(16);return pad(s,16)}else{var n=typeof str==="string"?new NormString(str):str,ret="",lelements=new ElementIterator(new CodePointSource(n,this.ignorePunctuation),this.map,this.keysize),element;while(lelements.hasNext()){element=lelements.next();if(this.reverse){element=(1<<this.keysize)-element}ret+=pad(element.toString(16),this.keysize/4)}}return ret}};Collator.getAvailableStyles=function(locale){return["standard"]};Collator.getAvailableScripts=function(){return["Latn"]};module.exports=Collator;